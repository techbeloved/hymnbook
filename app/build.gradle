plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.github.triplet.play' version '3.7.0'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'dagger.hilt.android.plugin'

def keystorePropertiesFile = rootProject.file("keystore.properties")

def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    keystoreProperties.setProperty("storeFile", System.getenv("KEYSTORE"))
    keystoreProperties.setProperty("keyAlias", System.getenv("ALIAS"))
    keystoreProperties.setProperty("keyPassword", System.getenv("KEY_PASSWORD"))
    keystoreProperties.setProperty("storePassword", System.getenv("KEY_STORE_PASSWORD"))
}

android {
    signingConfigs {
        release_config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdk 34
    defaultConfig {
        applicationId "com.techbeloved.hymnbook"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 30
        versionName "2.3.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release_config
        }

        debug {
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.release_config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    kapt {
        correctErrorTypes true
    }

    buildFeatures {
        dataBinding = true
    }

    productFlavors {
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit true
        }
    }

    playConfigs {
        // only enable for release build in CI (release should be built only on CI)
        release {
            enabled.set(true)
        }
    }
    namespace 'com.techbeloved.hymnbook'
}

kapt {
    generateStubs = true
}

play {
    track.set("internal")
    userFraction.set(0.5d)
    updatePriority.set(2)
    defaultToAppBundles.set(true)

    // Only enable in CI
    enabled.set(false)
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.google.firebase:firebase-crashlytics:18.5.0'
    implementation 'com.google.firebase:firebase-analytics:21.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    implementation 'androidx.cardview:cardview:1.0.0'

    // RxJava2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.0'

    def lifecycle_version = "2.6.2"
    def room_version = "2.6.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.palette:palette-ktx:1.0.0"

    // For Kotlin use kapt instead of annotationProcessor

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    def nav_version = "2.7.4"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    // For Kotlin use navigation-fragment-ktx
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // For Kotlin use navigation-ui-ktx
    // For Kotlin use navigation-ui-ktx

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    implementation 'androidx.core:core-ktx:1.12.0'

    // Mockito kotlin
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    // Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Snippety for text styling
    implementation 'com.github.fueled:snippety:1.1.1'

    // Preferences
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'

    // Custom views
    implementation project(':edittextwithsortby')

    // RxBinding
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'
    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.0.0-alpha2'
    implementation 'com.jakewharton.rxbinding3:rxbinding-appcompat:3.0.0-alpha2'
    implementation 'com.jakewharton.rxbinding3:rxbinding-recyclerview:3.0.0-alpha2'
    implementation 'com.jakewharton.rxbinding3:rxbinding-viewpager:3.0.0-alpha2'
    implementation 'com.jakewharton.rxbinding3:rxbinding-material:3.0.0-alpha2'

    // Firebase
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'com.google.firebase:firebase-firestore:24.9.0'
    implementation 'com.google.firebase:firebase-storage:20.3.0'
    implementation 'com.google.firebase:firebase-dynamic-links:21.2.0'

    // Play core
    implementation 'com.google.android.play:app-update-ktx:2.1.0'

    // PdfViewer
    implementation 'com.github.barteksc:android-pdf-viewer:3.1.0-beta.1'

    // Work manager
    def work_version = "2.8.1"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // Custom views
    implementation 'com.budiyev.android:circular-progress-bar:1.2.2'

    // Hilt
    implementation "com.google.dagger:hilt-android:2.48"
    kapt "com.google.dagger:hilt-android-compiler:2.48"
    testImplementation 'com.google.dagger:hilt-android-testing:2.48'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.48'
    kaptTest 'com.google.dagger:hilt-compiler:2.48'

    // When using Kotlin.
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    implementation 'androidx.hilt:hilt-work:1.0.0'
    // When using Kotlin.
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Media
    implementation "androidx.media:media:1.6.0"

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0'

    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.13.3'
}
repositories {
    mavenCentral()
}
